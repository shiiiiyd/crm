<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.crm.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.UserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, role_id, create_date, update_date
  </sql>

  <!--添加角色-->
  <insert id="insertBatch" parameterType="list">
    insert into t_user_role(user_id, role_id, create_date, update_date) values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId},#{item.roleId},#{item.createDate},#{item.updateDate})
    </foreach>
  </insert>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--查询用户角色总数量-->
  <select id="countUserRoleByUserId" resultType="java.lang.Integer">
    select count(1) from t_user_role where user_id = #{userId}
  </select>

  <!--查询关联该角色的用户数-->
  <select id="countUserRoleByRoleId" resultType="java.lang.Integer">
    select count(1) from t_user_role where role_id=#{roleId}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--删除用户所有的角色-->
  <delete id="deleteUserRoleByUserId" parameterType="int">
    delete from t_user_role where user_id=#{userId}
  </delete>

  <!--级联删除（t_user_role），删除关联该角色的用户-->
  <delete id="deleteUserRoleByRoleId" parameterType="int">
    delete from t_user_role where role_id = #{roleId}
  </delete>

  <insert id="insertSelective" parameterType="com.xxxx.crm.vo.UserRole">
    insert into t_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.UserRole">
    update t_user_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>